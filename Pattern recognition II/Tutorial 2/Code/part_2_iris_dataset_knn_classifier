{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"part_2_iris_dataset_knn_classifier","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"K3V1oGphf48c","colab_type":"code","colab":{}},"source":["# K-NN Classifier for Iris Dataset for All features\n","\n","import numpy as np\n","import pandas as pd\n","\n","from matplotlib import pyplot as plt\n","\n","import seaborn as sns\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import confusion_matrix\n","\n","from joblib import dump, load"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"UI84bwSZgGx-","colab_type":"code","outputId":"a77f97fd-a0d7-42d0-e15e-52291ef866db","executionInfo":{"status":"ok","timestamp":1584908426771,"user_tz":-60,"elapsed":730,"user":{"displayName":"giannis manousaridis","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_Qx9DJa3jj5S7eYvV_Q84-WjITVJDDo7Fjt3KAw=s64","userId":"11391910848866561307"}},"colab":{"base_uri":"https://localhost:8080/","height":402}},"source":["# Defining the names of the features for the Iris Dataset\n","cols = ['sepal_length', ' sepal_width', 'petal_length', 'petal_width', 'class']\n","\n","# Importing the Dataset\n","df = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data', names=cols)\n","\n","# Printing the Dataset\n","df"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Iris-setosa</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>Iris-virginica</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 5 columns</p>\n","</div>"],"text/plain":["     sepal_length   sepal_width  petal_length  petal_width           class\n","0             5.1           3.5           1.4          0.2     Iris-setosa\n","1             4.9           3.0           1.4          0.2     Iris-setosa\n","2             4.7           3.2           1.3          0.2     Iris-setosa\n","3             4.6           3.1           1.5          0.2     Iris-setosa\n","4             5.0           3.6           1.4          0.2     Iris-setosa\n","..            ...           ...           ...          ...             ...\n","145           6.7           3.0           5.2          2.3  Iris-virginica\n","146           6.3           2.5           5.0          1.9  Iris-virginica\n","147           6.5           3.0           5.2          2.0  Iris-virginica\n","148           6.2           3.4           5.4          2.3  Iris-virginica\n","149           5.9           3.0           5.1          1.8  Iris-virginica\n","\n","[150 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"bU0uZyHEgVFk","colab_type":"code","colab":{}},"source":["# Defing the target/labels feature\n","df['class_encod'] = df['class'].apply(lambda x: 0 if x == 'Iris-setosa' else 1 if x == 'Iris-versicolor' else 2)\n","df['class_encod'].unique()\n","y = df[['class_encod']]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"1suKrIfogo3a","colab_type":"code","outputId":"50cef55a-8b19-451e-c780-95eeefd6048e","executionInfo":{"status":"ok","timestamp":1584908431140,"user_tz":-60,"elapsed":491,"user":{"displayName":"giannis manousaridis","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_Qx9DJa3jj5S7eYvV_Q84-WjITVJDDo7Fjt3KAw=s64","userId":"11391910848866561307"}},"colab":{"base_uri":"https://localhost:8080/","height":402}},"source":["# Selecting the data(4 features of our Dataset)\n","X = df.iloc[:, 0:4]\n","\n","# Printing our Data\n","X"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 4 columns</p>\n","</div>"],"text/plain":["     sepal_length   sepal_width  petal_length  petal_width\n","0             5.1           3.5           1.4          0.2\n","1             4.9           3.0           1.4          0.2\n","2             4.7           3.2           1.3          0.2\n","3             4.6           3.1           1.5          0.2\n","4             5.0           3.6           1.4          0.2\n","..            ...           ...           ...          ...\n","145           6.7           3.0           5.2          2.3\n","146           6.3           2.5           5.0          1.9\n","147           6.5           3.0           5.2          2.0\n","148           6.2           3.4           5.4          2.3\n","149           5.9           3.0           5.1          1.8\n","\n","[150 rows x 4 columns]"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"f-HXaf-rlFty","colab_type":"code","outputId":"4861968a-b8fb-4580-e639-b6145b9842b0","executionInfo":{"status":"ok","timestamp":1584908433928,"user_tz":-60,"elapsed":501,"user":{"displayName":"giannis manousaridis","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj_Qx9DJa3jj5S7eYvV_Q84-WjITVJDDo7Fjt3KAw=s64","userId":"11391910848866561307"}},"colab":{"base_uri":"https://localhost:8080/","height":50}},"source":["import numpy as np\n","import pandas as pd\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import confusion_matrix\n","from sklearn import preprocessing\n","from sklearn.feature_selection import SelectKBest, chi2\n","\n","# define the number of neighboors\n","k = 3\n","# define the number of m-best features. Here max is 4.\n","m = 3\n","\n","# Using the second method to perform feature selection\n","# As a scoring/selection function you could use: chi2, f_classif, mutual_info_classif\n","# k is the number of features to be kept\n","if m < 4:\n","  X = SelectKBest(chi2, k=m).fit_transform(X,y)\n","\n","# Spliting the Original Dataset into Train and Test Sets\n","# test size is the percentage of the Dataset that is used for Test Set\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,\n","                                                    random_state=0, stratify=y)\n","\n","# Defing KNN as our Classifier(Number of Neighboors equals k)\n","m = KNeighborsClassifier(n_neighbors=k)\n","\n","# Training our Classifier, using Train Set\n","m.fit(X_train, np.ravel(y_train))\n","\n","# Printing the Train Scores\n","print(\"Train Score is: \" + str(m.score(X_train, y_train)))\n","# m.score(X_train, y_train)\n","\n","# Testing our Classifier, using Test Set\n","# In order to evaluate our Classifier, we need to test him on unknown data\n","m.predict(X_test)\n","\n","# Printing the Test Scores\n","print(\"Test Score is: \" + str(m.score(X_test, y_test)))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Train Score is: 0.9523809523809523\n","Test Score is: 0.9777777777777777\n"],"name":"stdout"}]}]}